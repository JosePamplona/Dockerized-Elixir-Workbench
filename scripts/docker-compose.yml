services:
  app:
    container_name: $APP_CONTAINER_NAME
    hostname: $APP_NAME
    image: $COMPOSE_IMAGE
    build:
      dockerfile: $COMPOSE_DOCKERFILE
    env_file: 
      - $ENV_PATH
    environment:
      DATABASE_HOST: $DB_HOST
    ports:
      - $APP_PORT:$APP_INTERNAL_PORT
    volumes:
      - $SOURCE_CODE_VOLUME
    links:
      - database
    depends_on: 
      database:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:$APP_INTERNAL_PORT || exit 1
      timeout: 45s
      interval: 10s
      retries: 10

  database:
    container_name: $DB_CONTAINER_NAME
    hostname: $DB_HOST
    image: postgres:$POSTGRES_IMAGE_VERSION
    restart: always
    environment: 
      POSTGRES_PASSWORD: $DB_PASS
      POSTGRES_USER: $DB_USER
    ports:
      - $DB_PORT:$DB_INTERNAL_PORT
    healthcheck:
      test: pg_isready -q -d $DB_PASS -U $DB_USER
      timeout: 45s
      interval: 10s
      retries: 10

  # pgadmin:
  #   container_name: $PGADMIN_CONTAINER_NAME
  #   image: dpage/pgadmin4:$PGADMIN_IMAGE_VERSION
  #   entrypoint: >
  #     /bin/sh -c "
  #     cp -f /pgadmin4/pgpass /var/lib/pgadmin/;
  #     chmod 600 /var/lib/pgadmin/pgpass;
  #     /entrypoint.sh
  #     "
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: $PGADMIN_EMAIL
  #     PGADMIN_DEFAULT_PASSWORD: $PGADMIN_PASSWORD
  #     PGADMIN_LISTEN_PORT: $PGADMIN_INTERNAL_PORT
  #     PGADMIN_CONFIG_SERVER_MODE: 'False'
  #     PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
  #   ports:
  #     - $PGADMIN_PORT:$PGADMIN_INTERNAL_PORT
  #   depends_on:
  #     - database
  #   volumes:
  #     - $PGADMIN_SERVERS_PATH:/pgadmin4/servers.json
  #     - $PGADMIN_PASS_PATH:/pgadmin4/pgpass
  